{"version":3,"file":"static/js/64.37dbfb56.chunk.js","mappings":"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","sources":["hooks/usePageTitle.js","pages/Order.jsx","pages/PageNotFound.jsx"],"sourcesContent":["import { useEffect, useCallback } from 'react';\n\nconst usePageTitle = (title) => {\n  useEffect(() => {\n    if (title) {\n      document.title = title;\n    }\n  }, [title]);\n  const setPageTitle = useCallback((pageTitle) => {\n    document.title = pageTitle;\n  }, []);\n  return { setPageTitle };\n};\n\nexport default usePageTitle;\n","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Spinner from '../components/shared/SpinnerRect';\n\nimport PageNotFound from './PageNotFound';\n\nimport usePageTitle from '../hooks/usePageTitle';\n\nimport { fetchOrder } from '../store/orderSlice';\nimport { STATUS } from '../utils';\nimport device from '../utils/device';\n\nconst Order = () => {\n  usePageTitle('Order Details');\n  const { id } = useParams();\n  const { order, status } = useSelector((state) => state.order);\n  const dispatch = useDispatch();\n\n  const { shippingaddress, items } = order || {};\n\n  const subTotal = items?.reduce(\n    (acc, cur) => acc + Number(cur.productPrice) * Number(cur.quantity),\n    0\n  );\n  const shippingCharges = order?.deliveryPrice;\n  const orderTotal = subTotal + shippingCharges;\n  const orderDate = new Date(order?.createdAt).toLocaleDateString('en-IN', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  useEffect(() => {\n    dispatch(\n      fetchOrder({\n        id,\n      })\n    );\n  }, [dispatch, id]);\n\n  if (status === STATUS.FAILED) return <PageNotFound />;\n\n  if (status === STATUS.LOADING || !order) return <Spinner />;\n\n  return (\n    <Container>\n      <BreadCrumbs>\n        <BreadCrumbItem>\n          <BreadCrumbItemLink exact to=\"/my/orders\">\n            Your Orders\n          </BreadCrumbItemLink>\n        </BreadCrumbItem>\n        <BreadCrumbItem>{'>'}</BreadCrumbItem>\n        <BreadCrumbItem>\n          <BreadCrumbItemLink className=\"active\" to={`/my/orders/${id}`}>\n            Order Details\n          </BreadCrumbItemLink>\n        </BreadCrumbItem>\n      </BreadCrumbs>\n      <OrderHeader>Order Details</OrderHeader>\n      <OrderInfoContainer>\n        <OrderInfo>Ordered on {orderDate}</OrderInfo>\n        <OrderInfo>Order# {order.id}</OrderInfo>\n      </OrderInfoContainer>\n      <OrderSummaryContainer>\n        <OrderSummary>\n          <OrderSummaryHeader>Shipping Address</OrderSummaryHeader>\n          <OrderSummaryText>{shippingaddress.name}</OrderSummaryText>\n          <OrderSummaryText>\n            {shippingaddress.address},{shippingaddress.locality}\n          </OrderSummaryText>\n          <OrderSummaryText>\n            {shippingaddress.city}, {shippingaddress.state}{' '}\n            {shippingaddress.pincode}\n          </OrderSummaryText>\n          <OrderSummaryText>India</OrderSummaryText>\n        </OrderSummary>\n        <OrderSummary>\n          <OrderSummaryHeader>Payment Method</OrderSummaryHeader>\n          <OrderSummaryText>\n            {order.razorpayOrderId\n              ? 'Credit / Debit / ATM Card'\n              : 'Pay On Delivery'}\n          </OrderSummaryText>\n        </OrderSummary>\n        <OrderSummary>\n          <OrderSummaryHeader>Order Summary</OrderSummaryHeader>\n          <OrderSummaryTextContainer>\n            <OrderSummaryText>Item(s) Subtotal:</OrderSummaryText>\n            <OrderSummaryText>₹{subTotal}</OrderSummaryText>\n          </OrderSummaryTextContainer>\n          <OrderSummaryTextContainer>\n            <OrderSummaryText>Shipping:</OrderSummaryText>\n            <OrderSummaryText>\n              {shippingCharges === 0 ? 'FREE' : `₹ ${shippingCharges}`}\n            </OrderSummaryText>\n          </OrderSummaryTextContainer>\n          <OrderSummaryTextContainer>\n            <OrderSummaryTextBold>Grand Total:</OrderSummaryTextBold>\n            <OrderSummaryTextBold>₹{orderTotal}</OrderSummaryTextBold>\n          </OrderSummaryTextContainer>\n        </OrderSummary>\n      </OrderSummaryContainer>\n      <OrderItemsContainer>\n        {items.map((item) => {\n          return (\n            <OrderItem key={item.id}>\n              <OrderItemImageContainer>\n                <OrderItemImage src={item.productImg} alt=\"product image\" />\n              </OrderItemImageContainer>\n              <OrderItemDescription>\n                <OrderItemTitle>\n                  {item.productTitle} x {item.quantity}\n                </OrderItemTitle>\n                <OrderItemPrice>&#8377; {item.productPrice}</OrderItemPrice>\n              </OrderItemDescription>\n            </OrderItem>\n          );\n        })}\n      </OrderItemsContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div``;\n\nconst BreadCrumbs = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\n\nconst BreadCrumbItem = styled.li``;\n\nconst BreadCrumbItemLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  &.active {\n    color: teal;\n  }\n`;\n\nconst OrderHeader = styled.h1`\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst OrderInfoContainer = styled.div`\n  margin-top: 10px;\n`;\n\nconst OrderInfo = styled.span`\n  &:first-child {\n    border-right: 1px solid #ccc;\n    display: inline-block;\n    margin-right: 10px;\n    padding-right: 10px;\n  }\n`;\n\nconst OrderSummaryContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid #ccc;\n  padding: 15px 20px;\n  margin: 20px 0;\n  @media ${device.tablet} {\n    flex-direction: column;\n    gap: 20px;\n  }\n  @media ${device.mobileM} {\n    flex-direction: column;\n    gap: 20px;\n  }\n`;\n\nconst OrderSummary = styled.div`\n  flex: 1;\n`;\n\nconst OrderSummaryHeader = styled.h1`\n  font-weight: 700;\n  font-size: 16px;\n  margin-bottom: 6px;\n`;\n\nconst OrderSummaryTextContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst OrderSummaryText = styled.p`\n  line-height: 24px;\n`;\n\nconst OrderSummaryTextBold = styled(OrderSummaryText)`\n  font-weight: 700;\n`;\n\nconst OrderItemsContainer = styled.div`\n  margin-top: 30px;\n`;\n\nconst OrderItem = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  @media ${device.tablet} {\n    gap: 20px;\n  }\n  @media ${device.mobileM} {\n    gap: 20px;\n  }\n`;\n\nconst OrderItemImageContainer = styled.div`\n  height: 112px;\n  width: 112px;\n  position: relative;\n`;\n\nconst OrderItemImage = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  margin: auto;\n  opacity: 1;\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nconst OrderItemDescription = styled.div`\n  @media ${device.tablet} {\n    flex-shrink: 2;\n  }\n  @media ${device.mobileM} {\n    flex-shrink: 2;\n  }\n`;\n\nconst OrderItemTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst OrderItemPrice = styled.p``;\n\nexport default Order;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst PageNotFound = () => {\n  return (\n    <Container>\n      <Text>Page not found</Text>\n      <Description>\n        Uh-oh! Looks like the page you are trying to access doesn&apos;t exist.\n        Please start afresh.\n      </Description>\n      <Button to=\"/\">Go Home</Button>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: center;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #f1f3f6;\n`;\n\nconst Text = styled.h1`\n  font-size: 34px;\n  color: #282c3f;\n`;\n\nconst Description = styled.h2`\n  font-size: 18px;\n  font-weight: 400;\n  margin: 1rem 0;\n  color: #93959f;\n`;\n\nconst Button = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  background-color: teal;\n  color: #fff;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  border: 1px solid rgba(0, 0, 0, 0);\n  transition: all 0.3s;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0);\n    color: teal;\n    border: 1px solid teal;\n  }\n`;\n\nexport default PageNotFound;\n"],"names":["title","useEffect","document","setPageTitle","useCallback","pageTitle","Container","styled","BreadCrumbs","BreadCrumbItem","BreadCrumbItemLink","Link","OrderHeader","OrderInfoContainer","OrderInfo","OrderSummaryContainer","device","OrderSummary","OrderSummaryHeader","OrderSummaryTextContainer","OrderSummaryText","OrderSummaryTextBold","OrderItemsContainer","OrderItem","OrderItemImageContainer","OrderItemImage","OrderItemDescription","OrderItemTitle","OrderItemPrice","usePageTitle","id","useParams","useSelector","state","order","status","dispatch","useDispatch","shippingaddress","items","subTotal","reduce","acc","cur","Number","productPrice","quantity","shippingCharges","deliveryPrice","orderTotal","orderDate","Date","createdAt","toLocaleDateString","year","month","day","fetchOrder","STATUS","exact","to","className","name","address","locality","city","pincode","razorpayOrderId","map","item","src","productImg","alt","productTitle","Text","Description","Button"],"sourceRoot":""}