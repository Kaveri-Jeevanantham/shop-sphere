{"version":3,"file":"static/js/183.517ea4d2.chunk.js","mappings":"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","sources":["components/PriceDetails.jsx","../node_modules/react-feather/dist/icons/circle.js","components/shared/CustomRadioButton.jsx","pages/Payment.jsx","utils/config.js"],"sourcesContent":["import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PriceDetails = ({\n  checkoutButtonHandler,\n  buttonTitle,\n  buttonVisible,\n}) => {\n  const { cart } = useSelector((state) => state.cart);\n\n  return (\n    <PriceBlockContainer>\n      <PriceBlockHeader>Price Details</PriceBlockHeader>\n      <PriceBreakUpContainer>\n        <PriceDetail>\n          <PriceDetailItem>Price ({cart.items.length} Items)</PriceDetailItem>\n          <PriceDetailValue>₹ {cart.totalPrice}</PriceDetailValue>\n        </PriceDetail>\n        <PriceDetail>\n          <PriceDetailItem>Delivery Charges</PriceDetailItem>\n          <PriceDetailValue>\n            {cart.deliveryPrice ? `₹ ${cart.deliveryPrice}` : 'Free'}\n          </PriceDetailValue>\n        </PriceDetail>\n        <TotalAmount>\n          <PriceDetail>\n            <PriceDetailItem>Total Amount</PriceDetailItem>\n            <PriceDetailValue>\n              ₹ {cart.totalPrice + cart.deliveryPrice}\n            </PriceDetailValue>\n          </PriceDetail>\n        </TotalAmount>\n        {buttonVisible && (\n          <CheckoutButton onClick={checkoutButtonHandler}>\n            {buttonTitle}\n          </CheckoutButton>\n        )}\n      </PriceBreakUpContainer>\n    </PriceBlockContainer>\n  );\n};\n\nconst PriceBlockContainer = styled.div`\n  background: #fff;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 2px 0px;\n`;\n\nconst PriceBlockHeader = styled.h1`\n  padding: 13px 24px;\n  font-size: 16px;\n  text-transform: uppercase;\n  color: #878787;\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst PriceBreakUpContainer = styled.div`\n  padding: 0 24px;\n`;\n\nconst PriceDetail = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0;\n  align-items: flex-start;\n`;\n\nconst PriceDetailItem = styled.p``;\n\nconst PriceDetailValue = styled.p``;\n\nconst TotalAmount = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin: 30px 0;\n  color: #212121;\n  border-top: 1px dashed #e0e0e0;\n  border-bottom: 1px dashed #e0e0e0;\n`;\n\nconst CheckoutButton = styled.button`\n  display: inline-block;\n  background-color: teal;\n  color: white;\n  border: 1px solid transparent;\n  text-transform: uppercase;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%);\n  padding: 16px 30px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 2px;\n  margin-bottom: 20px;\n  transition: all 0.3s;\n  cursor: pointer;\n  &:hover {\n    background-color: white;\n    color: teal;\n    border: 1px solid teal;\n  }\n`;\n\nPriceDetails.propTypes = {\n  checkoutButtonHandler: PropTypes.func.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n  buttonVisible: PropTypes.bool,\n};\n\nPriceDetails.defaultProps = {\n  buttonVisible: true,\n};\n\nexport default PriceDetails;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Circle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }));\n});\nCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCircle.displayName = 'Circle';\nexport default Circle;","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Circle } from 'react-feather';\n\nconst CustomRadioButton = ({\n  id,\n  name,\n  value,\n  selected,\n  radioBtnChangeHandler,\n}) => {\n  return (\n    <div>\n      <RadioButton\n        id={id}\n        name={name}\n        checked={selected}\n        onChange={(e) => radioBtnChangeHandler(id, name, value, e)}\n      />\n      <Label htmlFor={id}>\n        <RadioButtonIcon />\n      </Label>\n    </div>\n  );\n};\n\nconst Label = styled.label`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 2px solid #424553;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  &:hover {\n    font-weight: 500;\n    color: teal;\n  }\n`;\n\nconst RadioButtonIcon = styled(Circle)`\n  width: 12px;\n  height: 12px;\n  fill: white;\n  stroke: none;\n`;\n\nconst RadioButton = styled.input.attrs(() => ({\n  type: 'radio',\n}))`\n  display: none;\n  &:checked + label {\n    border: 2px solid teal;\n  }\n  &:checked + label ${RadioButtonIcon} {\n    fill: teal;\n  }\n`;\n\nCustomRadioButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  radioBtnChangeHandler: PropTypes.func,\n};\n\nCustomRadioButton.defaultProps = {\n  selected: false,\n  radioBtnChangeHandler: () => {},\n};\n\nexport default CustomRadioButton;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nimport PriceDetails from '../components/PriceDetails';\nimport CustomRadioButton from '../components/shared/CustomRadioButton';\n\nimport axios from '../utils/axios';\nimport Spinner from '../components/shared/SpinnerRect';\n\nimport { clearCart } from '../store/cartSlice';\n\nimport { RAZORPAY_KEY_ID } from '../utils/config';\nimport device from '../utils/device';\n\nconst paymentMethods = [\n  {\n    id: 1,\n    name: 'Pay On Delivery',\n    type: 'cash',\n  },\n  {\n    id: 2,\n    name: 'Credit / Debit / ATM Card',\n    type: 'digital',\n  },\n];\n\nconst Payment = () => {\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const [creatingOrder, setCreatingOrder] = useState(false);\n  const { selectedAddress } = useSelector((state) => state.address);\n  const { user } = useSelector((state) => state.auth);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!selectedAddress.id) navigate('/checkout/cart');\n  }, [navigate, selectedAddress.id]);\n\n  const selectPaymentMethod = (paymentMethodId) => {\n    setSelectedPaymentMethod(\n      paymentMethods.find((method) => method.id === paymentMethodId)\n    );\n  };\n\n  const loadScript = (src) => {\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  };\n\n  const displayRazorpay = async () => {\n    try {\n      const res = await loadScript(\n        'https://checkout.razorpay.com/v1/checkout.js'\n      );\n      if (!res) {\n        toast.error('Razorpay SDK failed to load. Are you online?');\n        return;\n      }\n      const result = await axios.post('/api/shop/order/razorpay');\n      if (!result) {\n        toast.error('Server error. Are you online?');\n        return;\n      }\n      // eslint-disable-next-line camelcase\n      const { amount, id: order_id, currency } = result.data;\n\n      const options = {\n        key: RAZORPAY_KEY_ID, // Enter the Key ID generated from the Dashboard\n        amount: amount.toString(),\n        currency,\n        name: 'Fashionista',\n        description: 'Thank you for your order',\n        image: `${process.env.PUBLIC_URL}/logo512.png`,\n        // eslint-disable-next-line camelcase\n        order_id,\n        async handler(response) {\n          try {\n            const data = {\n              // eslint-disable-next-line camelcase\n              orderId: order_id,\n              razorpayPaymentId: response.razorpay_payment_id,\n              razorpayOrderId: response.razorpay_order_id,\n              razorpaySignature: response.razorpay_signature,\n            };\n            // eslint-disable-next-line no-shadow\n            await axios.post('/api/shop/order/verify-payment', data);\n            setCreatingOrder(true);\n            // eslint-disable-next-line no-shadow\n            const res = await axios.post('/api/shop/order', {\n              addressId: selectedAddress.id,\n              // eslint-disable-next-line camelcase\n              razorpayOrderId: order_id,\n            });\n            dispatch(clearCart());\n            navigate('/checkout/payment-success', {\n              replace: true,\n              state: {\n                orderId: res.data.orderId,\n              },\n            });\n          } catch (error) {\n            toast.error('Something went wrong!');\n          }\n        },\n        prefill: {\n          name: `${user.firstName} ${user.lastName}`,\n          email: user.email,\n          contact: selectedAddress.phoneNumber,\n        },\n        notes: {\n          address: 'Fashionista ecommerce store',\n        },\n        theme: {\n          color: '#008080',\n        },\n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      toast.error('Something went wrong!');\n    }\n  };\n\n  const checkoutHandler = async () => {\n    if (selectedPaymentMethod.type === 'cash' && selectedAddress.id) {\n      try {\n        setCreatingOrder(true);\n        const response = await axios.post('/api/shop/order', {\n          addressId: selectedAddress.id,\n        });\n        dispatch(clearCart());\n        setTimeout(() => {\n          navigate('/checkout/payment-success', {\n            replace: true,\n            state: {\n              orderId: response.data.orderId,\n            },\n          });\n        }, [500]);\n      } catch (error) {\n        toast.error('Something went wrong!');\n      }\n    } else if (selectedPaymentMethod.type === 'digital' && selectedAddress.id) {\n      displayRazorpay();\n    }\n  };\n\n  if (creatingOrder) return <Spinner />;\n\n  return (\n    <Container>\n      <PaymentContainer>\n        <Header>Select Payment Method</Header>\n        {paymentMethods.map((method) => (\n          <PaymentMethod\n            key={method.id}\n            id={method.id}\n            onClick={() => selectPaymentMethod(method.id)}\n          >\n            <CustomRadioButton\n              name=\"payment\"\n              selected={selectedPaymentMethod?.id === method.id}\n              id={method.id}\n              value={method.id}\n            />\n            <PaymentMethodName>{method.name}</PaymentMethodName>\n          </PaymentMethod>\n        ))}\n      </PaymentContainer>\n      <PriceDetailsContainer>\n        <PriceDetails\n          checkoutButtonHandler={checkoutHandler}\n          buttonTitle=\"Place Order\"\n          buttonVisible={!!selectedPaymentMethod}\n        />\n      </PriceDetailsContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 50px 20px;\n  display: flex;\n  gap: 20px;\n  background: #f1f3f6;\n  align-items: flex-start;\n  min-height: 100vh;\n  @media ${device.tablet} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  @media ${device.mobileM} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst PaymentContainer = styled.div`\n  flex: 3;\n  background: #fff;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 2px 0px;\n  @media ${device.tablet} {\n    flex: 0;\n  }\n  @media ${device.mobileM} {\n    flex: 0;\n  }\n`;\n\nconst Header = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 15px 24px;\n  border-bottom: 1px solid #efefef;\n`;\n\nconst PaymentMethod = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid #f0f0f0;\n  padding: 16px 25px;\n  cursor: pointer;\n`;\n\nconst PaymentMethodName = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst PriceDetailsContainer = styled.div`\n  flex: 1;\n  position: sticky;\n  top: 80px;\n`;\n\nexport default Payment;\n","// eslint-disable-next-line import/prefer-default-export\nexport const RAZORPAY_KEY_ID = process.env.REACT_APP_RAZORPAY_KEY_ID;\n"],"names":["PriceDetails","checkoutButtonHandler","buttonTitle","buttonVisible","cart","useSelector","state","PriceBlockContainer","PriceBlockHeader","PriceBreakUpContainer","PriceDetail","PriceDetailItem","items","length","PriceDetailValue","totalPrice","deliveryPrice","TotalAmount","CheckoutButton","onClick","styled","defaultProps","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Circle","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","propTypes","PropTypes","displayName","CustomRadioButton","id","name","value","selected","radioBtnChangeHandler","RadioButton","checked","onChange","e","Label","htmlFor","RadioButtonIcon","type","paymentMethods","Container","device","PaymentContainer","Header","PaymentMethod","PaymentMethodName","PriceDetailsContainer","useState","selectedPaymentMethod","setSelectedPaymentMethod","creatingOrder","setCreatingOrder","selectedAddress","address","user","auth","navigate","useNavigate","dispatch","useDispatch","useEffect","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","displayRazorpay","toast","axios","result","data","amount","order_id","currency","options","process","toString","description","image","handler","response","orderId","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","addressId","res","clearCart","replace","prefill","firstName","lastName","email","contact","phoneNumber","notes","theme","window","Razorpay","open","checkoutHandler","setTimeout","map","method","paymentMethodId","find"],"sourceRoot":""}