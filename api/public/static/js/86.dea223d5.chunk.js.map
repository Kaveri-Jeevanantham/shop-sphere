{"version":3,"file":"static/js/86.dea223d5.chunk.js","mappings":"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","sources":["components/Backdrop.jsx","components/Product.jsx","components/ProductList.jsx","components/shared/PrimaryButton.jsx","hooks/useInView.js","hooks/usePageTitle.js","pages/PageNotFound.jsx","components/SideDrawer.jsx","components/shared/CustomCheckBox.jsx","components/Filters.jsx","pages/Products.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Backdrop = ({ showBackdrop, onBackdropClick }) => {\n  return (\n    <StyledBackdrop showBackdrop={showBackdrop} onClick={onBackdropClick} />\n  );\n};\n\nconst StyledBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 300;\n  background-color: rgb(0, 0, 0);\n  transition: all cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.3s;\n  opacity: ${(props) => (props.showBackdrop ? 0.6 : 0)};\n  visibility: ${(props) => (props.showBackdrop ? 'visible' : 'hidden')};\n`;\n\nBackdrop.propTypes = {\n  showBackdrop: PropTypes.bool.isRequired,\n  onBackdropClick: PropTypes.func.isRequired,\n};\n\nexport default Backdrop;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport device from '../utils/device';\n\nconst Product = ({ title, img, priceNew, priceOld, id }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const navigate = useNavigate();\n\n  const onProductClickHandler = () => {\n    navigate(`/product/${id}`);\n  };\n\n  return (\n    <Container\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={onProductClickHandler}\n    >\n      <ProductImageContainer>\n        <ProductImage src={img} />\n        <ProductButtonContainer isHovered={isHovered}>\n          <ProductButton onClick={onProductClickHandler}>\n            Add to cart\n          </ProductButton>\n          <ProductButton onClick={onProductClickHandler}>Buy Now</ProductButton>\n        </ProductButtonContainer>\n      </ProductImageContainer>\n      <ProductName>{title}</ProductName>\n      <ProductPriceContainer>\n        <ProductPriceNew>&#8377; {priceNew}</ProductPriceNew>\n        <ProductPriceOld>&#8377; {priceOld}</ProductPriceOld>\n      </ProductPriceContainer>\n    </Container>\n  );\n};\n\nProduct.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  priceNew: PropTypes.number.isRequired,\n  priceOld: PropTypes.number.isRequired,\n};\n\nconst Container = styled.div`\n  width: 300px;\n  cursor: pointer;\n  @media ${device.tablet} {\n    width: 150px;\n  }\n  @media ${device.mobileM} {\n    width: 150px;\n  }\n`;\n\nconst ProductImageContainer = styled.div`\n  height: 400px;\n  width: 100%;\n  box-shadow: 0 0 20px 1px #0000001c;\n  position: relative;\n  @media ${device.tablet} {\n    height: 160px;\n  }\n  @media ${device.mobileM} {\n    height: 160px;\n  }\n`;\n\nconst ProductImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  @media ${device.tablet} {\n    object-fit: contain;\n  }\n  @media ${device.mobileM} {\n    object-fit: contain;\n  }\n`;\n\nconst ProductName = styled.a`\n  display: inline-block;\n  margin-top: 12px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  @media ${device.tablet} {\n    font-size: 14px;\n  }\n  @media ${device.mobileM} {\n    font-size: 14px;\n  }\n`;\n\nconst ProductPriceContainer = styled.div`\n  @media ${device.tablet} {\n    font-size: 14px;\n  }\n  @media ${device.mobileM} {\n    font-size: 14px;\n  }\n`;\n\nconst ProductPriceNew = styled.span`\n  font-weight: 700;\n  color: teal;\n  margin-right: 5px;\n`;\n\nconst ProductPriceOld = styled.del`\n  color: #515151;\n`;\n\nconst ProductButtonContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-around;\n  padding: 15px 0;\n  overflow: hidden;\n  opacity: ${(props) => (props.isHovered ? 1 : 0)};\n  transition: all 0.5s ease;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n\nconst ProductButton = styled.button`\n  display: inline-block;\n  background-color: white;\n  font-weight: 700;\n  font-size: 14px;\n  border: none;\n  padding: 12px 15px;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    background-color: teal;\n    color: white;\n  }\n`;\n\nexport default Product;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Product from './Product';\n\nimport device from '../utils/device';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  justify-items: center;\n  @media ${device.mobileM} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n// const Container = styled.div`\n//   display: flex;\n//   align-items: flex-start;\n//   justify-content: space-between;\n//   flex-wrap: wrap;\n//   gap: 20px;\n//   & > *:last-child {\n//     margin-right: auto;\n//   }\n// `;\n\nconst ProductList = ({ products }) => {\n  const productList = products.map((product) => (\n    <Product\n      title={product.title}\n      img={product.img}\n      priceNew={Number(product.price)}\n      priceOld={Number(product.price)}\n      key={product.id}\n      id={product.id}\n    />\n  ));\n  return <Container>{productList}</Container>;\n};\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ProductList;\n","import styled from 'styled-components';\n\nconst PrimaryButton = styled.button`\n  background-color: teal;\n  border: none;\n  color: white;\n  padding: 15px 20px;\n  font-size: 16px;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n\nexport default PrimaryButton;\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nconst useInView = (\n  options = {\n    root: null,\n    rootMargin: '0px',\n    threshold: 1.0,\n  }\n) => {\n  const [inView, setInView] = useState(false);\n  const targetRef = useRef(null);\n\n  const isMounted = useRef(true);\n\n  const inViewRef = useCallback((node) => {\n    if (node) {\n      targetRef.current = node;\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (isMounted.current) {\n          if (entry.isIntersecting) {\n            setInView(true);\n          } else {\n            setInView(false);\n          }\n        }\n      });\n    }, options);\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n  }, [options]);\n\n  return { ref: targetRef, inView, inViewRef };\n};\n\nexport default useInView;\n","import { useEffect, useCallback } from 'react';\n\nconst usePageTitle = (title) => {\n  useEffect(() => {\n    if (title) {\n      document.title = title;\n    }\n  }, [title]);\n  const setPageTitle = useCallback((pageTitle) => {\n    document.title = pageTitle;\n  }, []);\n  return { setPageTitle };\n};\n\nexport default usePageTitle;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst PageNotFound = () => {\n  return (\n    <Container>\n      <Text>Page not found</Text>\n      <Description>\n        Uh-oh! Looks like the page you are trying to access doesn&apos;t exist.\n        Please start afresh.\n      </Description>\n      <Button to=\"/\">Go Home</Button>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: center;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #f1f3f6;\n`;\n\nconst Text = styled.h1`\n  font-size: 34px;\n  color: #282c3f;\n`;\n\nconst Description = styled.h2`\n  font-size: 18px;\n  font-weight: 400;\n  margin: 1rem 0;\n  color: #93959f;\n`;\n\nconst Button = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  background-color: teal;\n  color: #fff;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  border: 1px solid rgba(0, 0, 0, 0);\n  transition: all 0.3s;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0);\n    color: teal;\n    border: 1px solid teal;\n  }\n`;\n\nexport default PageNotFound;\n","import { createPortal } from 'react-dom';\nimport styled from 'styled-components';\n\nimport Backdrop from './Backdrop';\nimport device from '../utils/device';\n\nconst SideDrawer = ({\n  children,\n  direction,\n  showSideDrawer,\n  onSideDrawerClose,\n}) => {\n  return createPortal(\n    <div>\n      <Backdrop\n        showBackdrop={showSideDrawer}\n        onBackdropClick={onSideDrawerClose}\n      />\n      <StyledSideDrawer direction={direction} showSideDrawer={showSideDrawer}>\n        {children}\n      </StyledSideDrawer>\n    </div>,\n    document.body\n  );\n};\n\nconst StyledSideDrawer = styled.div`\n  max-width: 400px;\n  width: 100%;\n  height: 100vh;\n  overflow: scroll;\n  position: fixed;\n  top: 0;\n  right: ${(props) => (props.direction === 'right' ? 0 : '')};\n  left: ${(props) => (props.direction === 'left' ? 0 : '')};\n  z-index: 500;\n  box-shadow: 0px 0 10px 3px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  transition: transform ease-in 0.3s;\n  transform: translateX(\n    ${(props) => {\n      if (props.showSideDrawer) return '0';\n      if (props.direction === 'right') return '100%';\n      return '-100%';\n    }}\n  );\n  @media ${device.tablet} {\n    max-width: 80%;\n    width: 300px;\n  }\n  @media ${device.mobileM} {\n    max-width: 80%;\n    width: 300px;\n  }\n`;\n\nexport default SideDrawer;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Check } from 'react-feather';\n\nconst CustomCheckBox = ({\n  id,\n  name,\n  value,\n  selected,\n  checkBoxChangeHandler,\n}) => {\n  return (\n    <Label>\n      <Input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={selected}\n        onChange={(e) => checkBoxChangeHandler(id, value, e)}\n      />\n      <CheckBox />\n      <CheckBoxIcon />\n      <LabelText>{value}</LabelText>\n    </Label>\n  );\n};\n\nconst Label = styled.label`\n  display: block;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst LabelText = styled.span`\n  margin-left: 18px;\n  font-size: 18px;\n  color: rgba(0, 0, 0, 0.75);\n  ${Label}:hover & {\n    font-weight: 500;\n  }\n`;\n\nconst CheckBox = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  width: 12px;\n  height: 12px;\n  border: 1px solid #a9abb2;\n  background-color: transparent;\n  transform: translateY(-50%);\n  display: inline-block;\n  transition: border 0.3s;\n  ${Input}:checked ~ & {\n    border-color: transparent;\n  }\n`;\n\nconst CheckBoxIcon = styled(Check)`\n  fill: teal;\n  background: teal;\n  stroke: white;\n  width: 12px;\n  height: 12px;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%) scale(0);\n  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  ${Input}:checked ~ & {\n    transform: translateY(-50%) scale(1);\n  }\n`;\n\nCustomCheckBox.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  checkBoxChangeHandler: PropTypes.func.isRequired,\n};\n\nexport default CustomCheckBox;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { X } from 'react-feather';\nimport Slider from '@mui/material/Slider';\n\nimport CustomCheckBox from './shared/CustomCheckBox';\n\nimport { setFilters, resetFilters } from '../store/filtersSlice';\nimport { fetchAllCategories } from '../store/categoriesSlice';\nimport { fetchAllSizes } from '../store/sizesSlice';\n\nimport device from '../utils/device';\n\nconst Filters = ({ closeSideDrawer }) => {\n  const { selectedSizes: selectedSizesString, priceRange: filteredPriceRange } =\n    useSelector((state) => state.filters);\n  const [selectedCategory, setSelectedCategory] = useState({});\n  const [selectedSizes, setSelectedSizes] = useState(() => {\n    return selectedSizesString.split(',').reduce((acc, cur) => {\n      if (cur) {\n        acc[cur] = true;\n      }\n      return acc;\n    }, {});\n  });\n  const [priceRange, setPriceRange] = useState(filteredPriceRange);\n\n  const { sizes } = useSelector((state) => state.sizes);\n  const { categories } = useSelector((state) => state.categories);\n\n  const dispatch = useDispatch();\n  const setSearchParams = useSearchParams()[1];\n\n  useEffect(() => {\n    dispatch(fetchAllCategories());\n    dispatch(fetchAllSizes());\n  }, [dispatch]);\n\n  const onCheckBoxChangeHandler = (id, value, e) => {\n    const { checked } = e.target;\n    setSelectedSizes((prev) => ({\n      ...prev,\n      [value]: checked,\n    }));\n  };\n\n  const onPriceSliderChangeHandler = (e, value) => {\n    setPriceRange(value);\n  };\n\n  const clearFilters = () => {\n    dispatch(resetFilters());\n    setSelectedCategory({});\n    setSelectedSizes({});\n    setPriceRange([100, 3000]);\n    closeSideDrawer();\n  };\n\n  const onSubmitHandler = () => {\n    const sizesString = Object.keys(selectedSizes).reduce(\n      (acc, cur) => (selectedSizes[cur] ? `${acc},${cur}` : acc),\n      ''\n    );\n    dispatch(\n      setFilters({\n        category: selectedCategory.category,\n        sizes: sizesString,\n        priceRange,\n      })\n    );\n    setSearchParams({\n      sizes: sizesString,\n      priceRange,\n    });\n    closeSideDrawer();\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>Filters</Title>\n        <CloseButton onClick={closeSideDrawer}>\n          <CloseIcon />\n        </CloseButton>\n      </Header>\n      <FilterContainer>\n        <FilterText>Categories</FilterText>\n        {categories.map((category) => (\n          <Filter key={category.id}>\n            <CategoriesLink\n              to={`/products/${category.slug}`}\n              onClick={() => {\n                dispatch(resetFilters());\n                closeSideDrawer();\n              }}\n            >\n              {category.category}\n            </CategoriesLink>\n          </Filter>\n        ))}\n      </FilterContainer>\n      <FilterContainer>\n        <FilterText>Price</FilterText>\n        <PriceRange>\n          INR {priceRange[0]} - INR {priceRange[1]}\n        </PriceRange>\n        <Slider\n          value={priceRange}\n          max={3000}\n          min={100}\n          step={100}\n          onChange={onPriceSliderChangeHandler}\n          marks\n          sx={{\n            maxWidth: 250,\n            width: '100%',\n            color: 'teal',\n          }}\n        />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterText>Size</FilterText>\n        {sizes.map((size) => (\n          <Filter key={size.id}>\n            <CustomCheckBox\n              id={size.id}\n              name=\"size\"\n              value={size.size}\n              selected={!!selectedSizes[size.size]}\n              checkBoxChangeHandler={onCheckBoxChangeHandler}\n            />\n          </Filter>\n        ))}\n        <ButtonsContainer>\n          <ClearButton onClick={clearFilters}>Clear</ClearButton>\n          <SubmitButton onClick={onSubmitHandler}>Submit</SubmitButton>\n        </ButtonsContainer>\n      </FilterContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 20px 10px;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.h1`\n  font-weight: 300;\n  font-size: 25px;\n  @media ${device.tablet} {\n    font-size: 20px;\n    font-weight: 700;\n    color: #1b2839;\n  }\n  @media ${device.mobileM} {\n    font-size: 20px;\n    font-weight: 700;\n    color: #1b2839;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nconst CloseIcon = styled(X)``;\n\nconst FilterContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst FilterText = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  @media ${device.tablet} {\n    font-size: 18px;\n    font-weight: 700;\n    color: #1b2839;\n  }\n  @media ${device.mobileM} {\n    font-size: 18px;\n    font-weight: 700;\n    color: #1b2839;\n  }\n`;\n\nconst Filter = styled.div`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nconst CategoriesLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  &:hover,\n  &.active {\n    color: teal;\n    font-weight: 500;\n  }\n  @media ${device.tablet} {\n    font-size: 16px;\n  }\n  @media ${device.mobileM} {\n    font-size: 16px;\n  }\n`;\n\nconst PriceRange = styled.p``;\n\nconst ButtonsContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nconst Button = styled.button`\n  font-family: inherit;\n  font-weight: 700;\n  border: 1px solid transparent;\n  text-transform: uppercase;\n  font-weight: 700;\n  border: 1px solid transparent;\n  text-transform: uppercase;\n  padding: 15px 30px;\n  cursor: pointer;\n  flex: 1;\n  @media ${device.tablet} {\n    padding: 16px 0;\n  }\n  @media ${device.mobileM} {\n    padding: 16px 0;\n  }\n`;\n\nconst ClearButton = styled(Button)`\n  color: #535665;\n  border: 1px solid #535665;\n  background: #fff;\n  &:hover {\n    background: #535665;\n    color: #fff;\n    border: 1px solid #535665;\n  }\n`;\n\nconst SubmitButton = styled(Button)`\n  background: teal;\n  color: #fff;\n  border: 1px solid transparent;\n  &:hover {\n    background: #fff;\n    color: teal;\n    border: 1px solid teal;\n  }\n`;\n\nFilters.propTypes = {\n  closeSideDrawer: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Filter } from 'react-feather';\n\nimport ProductList from '../components/ProductList';\nimport PrimaryButton from '../components/shared/PrimaryButton';\nimport useInView from '../hooks/useInView';\nimport SideDrawer from '../components/SideDrawer';\nimport Filters from '../components/Filters';\nimport PageNotFound from './PageNotFound';\nimport Spinner from '../components/shared/SpinnerRect';\n\nimport usePageTitle from '../hooks/usePageTitle';\n\nimport { fetchProducts, clearProducts } from '../store/productsSlice';\nimport { fetchAllCategories } from '../store/categoriesSlice';\nimport { setSort, resetFilters } from '../store/filtersSlice';\n\nimport device from '../utils/device';\n\nconst sortOptions = [\n  {\n    sortBy: 'price',\n    orderBy: 'asc',\n    name: 'Price: Low - High',\n  },\n  {\n    sortBy: 'price',\n    orderBy: 'desc',\n    name: 'Price: High - Low',\n  },\n  {\n    sortBy: 'date',\n    orderBy: 'desc',\n    name: `What's new`,\n  },\n];\n\nconst initialSortingOption = {\n  sortBy: '',\n  orderBy: '',\n  name: '',\n};\n\nconst ProductsComponent = () => {\n  const dispatch = useDispatch();\n  const { categorySlug } = useParams();\n  const navigate = useNavigate();\n  const { products, totalProducts, status } = useSelector(\n    (state) => state.products\n  );\n  const { categories } = useSelector((state) => state.categories);\n  const { selectedSizes, priceRange } = useSelector((state) => state.filters);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n  const [selectedSort, setSelectedSort] = useState(initialSortingOption);\n\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [isURLInvalid, setIsURLInvalid] = useState(false);\n\n  const { inView: showMoreButtonInView, ref } = useInView();\n  const { setPageTitle } = usePageTitle();\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetFilters());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (categorySlug) {\n      if (categories.length === 0) {\n        dispatch(fetchAllCategories());\n      } else {\n        const productCategoryExist = categories.find(\n          (cat) => cat.slug === categorySlug\n        );\n        if (productCategoryExist) {\n          setIsPageLoading(false);\n          dispatch(\n            fetchProducts({\n              category: productCategoryExist.category,\n              sortBy: selectedSort.sortBy,\n              orderBy: selectedSort.orderBy,\n              priceRange,\n              sizes: selectedSizes,\n            })\n          );\n          setSelectedCategory(productCategoryExist.category);\n          setPageTitle(`${productCategoryExist.category} | Fashionista`);\n        } else {\n          setIsPageLoading(false);\n          setIsURLInvalid(true);\n        }\n      }\n    } else {\n      setIsPageLoading(false);\n      dispatch(\n        fetchProducts({\n          category: '',\n          sortBy: selectedSort.sortBy,\n          orderBy: selectedSort.orderBy,\n          priceRange,\n          sizes: selectedSizes,\n        })\n      );\n    }\n    return () => {\n      dispatch(clearProducts());\n    };\n  }, [\n    categorySlug,\n    dispatch,\n    categories,\n    navigate,\n    setPageTitle,\n    selectedSort,\n    priceRange,\n    selectedSizes,\n  ]);\n\n  useEffect(() => {\n    if (showMoreButtonInView) {\n      dispatch(\n        fetchProducts({\n          category: selectedCategory,\n          sortBy: selectedSort.sortBy,\n          orderBy: selectedSort.orderBy,\n          sizes: selectedSizes,\n          priceRange,\n        })\n      );\n    }\n  }, [\n    showMoreButtonInView,\n    selectedCategory,\n    selectedSort,\n    dispatch,\n    selectedSizes,\n    priceRange,\n  ]);\n\n  const showMoreProducts = () => {\n    dispatch(\n      fetchProducts({\n        category: selectedCategory,\n        sortBy: selectedSort.sortBy,\n        orderBy: selectedSort.orderBy,\n        sizes: selectedSizes,\n        priceRange,\n      })\n    );\n  };\n\n  const onSortOptionChanged = (e) => {\n    const newSortOption =\n      sortOptions.find((sort) => sort.name === e.target.value) ||\n      initialSortingOption;\n    setSelectedSort(newSortOption);\n    dispatch(\n      setSort({\n        sortBy: newSortOption.sortBy,\n        orderBy: newSortOption.orderBy,\n      })\n    );\n  };\n\n  if (isPageLoading || (status === 'loading' && products.length === 0))\n    return <Spinner />;\n\n  if (isURLInvalid) return <PageNotFound />;\n\n  return (\n    <Container>\n      <SideDrawer\n        direction=\"right\"\n        showSideDrawer={showSideDrawer}\n        onSideDrawerClose={() => setShowSideDrawer(false)}\n      >\n        <Filters closeSideDrawer={() => setShowSideDrawer(false)} />\n      </SideDrawer>\n      <Wrapper>\n        <Title>{selectedCategory || 'All Categories'}</Title>\n        <FiltersContainer>\n          <FilterButton\n            onClick={() => {\n              setShowSideDrawer(true);\n            }}\n          >\n            <span>\n              <Filter />\n            </span>\n            Filters\n          </FilterButton>\n          <SortBySelect\n            value={selectedSort.name}\n            onChange={onSortOptionChanged}\n          >\n            <SortByOption value=\"\">Sort By</SortByOption>\n            {sortOptions.map((sort) => (\n              <SortByOption value={sort.name} key={sort.name}>\n                {sort.name}\n              </SortByOption>\n            ))}\n          </SortBySelect>\n        </FiltersContainer>\n      </Wrapper>\n      <ProductsContainer>\n        {status !== 'loading' && totalProducts === 0 && (\n          <Paragraph>No Products Found!</Paragraph>\n        )}\n        <ProductList products={products} />\n        {totalProducts > 0 && (\n          <Paragraph>\n            Showing {products.length} of {totalProducts} results\n          </Paragraph>\n        )}\n        {products.length < totalProducts && (\n          <ShowMoreButton onClick={showMoreProducts} ref={ref}>\n            Load More\n          </ShowMoreButton>\n        )}\n      </ProductsContainer>\n    </Container>\n  );\n};\n\nconst Products = () => {\n  const { categorySlug } = useParams();\n  return (\n    <Fragment key={categorySlug}>\n      <ProductsComponent />\n    </Fragment>\n  );\n};\n\nconst Container = styled.div`\n  padding: 50px 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 25px;\n  font-weight: 500;\n  @media ${device.tablet} {\n    font-size: 18px;\n    margin-right: 10px;\n  }\n  @media ${device.mobileM} {\n    font-size: 18px;\n    margin-right: 10px;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 18px;\n  background: teal;\n  color: white;\n  border: none;\n  padding: 12px 15px;\n  text-transform: uppercase;\n  margin-right: 10px;\n  box-shadow: 2px 2px 5px 1px rgb(0 0 0 / 20%);\n  border: 1px solid transparent;\n  cursor: pointer;\n  & span {\n    margin-right: 5px;\n    display: flex;\n  }\n  & svg {\n    width: 16px;\n    height: 16px;\n    stroke: white;\n  }\n  @media ${device.tablet} {\n    font-size: 14px;\n  }\n  @media ${device.mobileM} {\n    font-size: 14px;\n  }\n`;\n\nconst SortBySelect = styled.select`\n  font-size: 18px;\n  cursor: pointer;\n  @media ${device.tablet} {\n    font-size: 14px;\n  }\n  @media ${device.mobileM} {\n    font-size: 14px;\n  }\n`;\n\nconst SortByOption = styled.option``;\n\nconst ProductsContainer = styled.div`\n  margin-top: 40px;\n`;\n\nconst Paragraph = styled.p`\n  text-align: center;\n  margin-top: 20px;\n`;\n\nconst ShowMoreButton = styled(PrimaryButton)`\n  display: block;\n  margin: 20px auto;\n  @media ${device.tablet} {\n    font-size: 14px;\n  }\n  @media ${device.mobileM} {\n    font-size: 14px;\n  }\n`;\n\nexport default Products;\n"],"names":["StyledBackdrop","styled","props","showBackdrop","onBackdropClick","onClick","Container","device","ProductImageContainer","ProductImage","ProductName","ProductPriceContainer","ProductPriceNew","ProductPriceOld","ProductButtonContainer","isHovered","ProductButton","title","img","priceNew","priceOld","id","useState","setIsHovered","navigate","useNavigate","onProductClickHandler","onMouseEnter","onMouseLeave","src","productList","products","map","product","Number","price","PrimaryButton","options","root","rootMargin","threshold","inView","setInView","targetRef","useRef","isMounted","inViewRef","useCallback","node","current","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","ref","document","setPageTitle","pageTitle","Text","Description","Button","Link","to","StyledSideDrawer","direction","showSideDrawer","children","onSideDrawerClose","createPortal","Backdrop","body","Label","Input","LabelText","CheckBox","CheckBoxIcon","Check","name","value","selected","checkBoxChangeHandler","type","checked","onChange","e","Header","Title","CloseButton","CloseIcon","X","FilterContainer","FilterText","Filter","CategoriesLink","NavLink","PriceRange","ButtonsContainer","ClearButton","SubmitButton","closeSideDrawer","useSelector","state","filters","selectedSizesString","selectedSizes","filteredPriceRange","priceRange","selectedCategory","setSelectedCategory","split","reduce","acc","cur","setSelectedSizes","setPriceRange","sizes","categories","dispatch","useDispatch","setSearchParams","useSearchParams","fetchAllCategories","fetchAllSizes","onCheckBoxChangeHandler","target","prev","category","slug","resetFilters","Slider","max","min","step","marks","sx","maxWidth","width","color","size","sizesString","Object","keys","setFilters","sortOptions","sortBy","orderBy","initialSortingOption","ProductsComponent","categorySlug","useParams","totalProducts","status","setShowSideDrawer","selectedSort","setSelectedSort","isPageLoading","setIsPageLoading","isURLInvalid","setIsURLInvalid","useInView","showMoreButtonInView","usePageTitle","length","productCategoryExist","find","cat","fetchProducts","clearProducts","PageNotFound","Wrapper","FiltersContainer","FilterButton","SortBySelect","newSortOption","sort","setSort","SortByOption","ProductsContainer","Paragraph","ProductList","ShowMoreButton","Fragment"],"sourceRoot":""}