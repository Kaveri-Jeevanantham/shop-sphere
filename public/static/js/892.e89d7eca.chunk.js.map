{"version":3,"file":"static/js/892.e89d7eca.chunk.js","mappings":"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","sources":["components/PriceDetails.jsx","../node_modules/react-feather/dist/icons/circle.js","components/shared/CustomRadioButton.jsx","pages/Address.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PriceDetails = ({\n  checkoutButtonHandler,\n  buttonTitle,\n  buttonVisible,\n}) => {\n  const { cart } = useSelector((state) => state.cart);\n\n  return (\n    <PriceBlockContainer>\n      <PriceBlockHeader>Price Details</PriceBlockHeader>\n      <PriceBreakUpContainer>\n        <PriceDetail>\n          <PriceDetailItem>Price ({cart.items.length} Items)</PriceDetailItem>\n          <PriceDetailValue>₹ {cart.totalPrice}</PriceDetailValue>\n        </PriceDetail>\n        <PriceDetail>\n          <PriceDetailItem>Delivery Charges</PriceDetailItem>\n          <PriceDetailValue>\n            {cart.deliveryPrice ? `₹ ${cart.deliveryPrice}` : 'Free'}\n          </PriceDetailValue>\n        </PriceDetail>\n        <TotalAmount>\n          <PriceDetail>\n            <PriceDetailItem>Total Amount</PriceDetailItem>\n            <PriceDetailValue>\n              ₹ {cart.totalPrice + cart.deliveryPrice}\n            </PriceDetailValue>\n          </PriceDetail>\n        </TotalAmount>\n        {buttonVisible && (\n          <CheckoutButton onClick={checkoutButtonHandler}>\n            {buttonTitle}\n          </CheckoutButton>\n        )}\n      </PriceBreakUpContainer>\n    </PriceBlockContainer>\n  );\n};\n\nconst PriceBlockContainer = styled.div`\n  background: #fff;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 2px 0px;\n`;\n\nconst PriceBlockHeader = styled.h1`\n  padding: 13px 24px;\n  font-size: 16px;\n  text-transform: uppercase;\n  color: #878787;\n  border-bottom: 1px solid #f0f0f0;\n`;\n\nconst PriceBreakUpContainer = styled.div`\n  padding: 0 24px;\n`;\n\nconst PriceDetail = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0;\n  align-items: flex-start;\n`;\n\nconst PriceDetailItem = styled.p``;\n\nconst PriceDetailValue = styled.p``;\n\nconst TotalAmount = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin: 30px 0;\n  color: #212121;\n  border-top: 1px dashed #e0e0e0;\n  border-bottom: 1px dashed #e0e0e0;\n`;\n\nconst CheckoutButton = styled.button`\n  display: inline-block;\n  background-color: teal;\n  color: white;\n  border: 1px solid transparent;\n  text-transform: uppercase;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%);\n  padding: 16px 30px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 2px;\n  margin-bottom: 20px;\n  transition: all 0.3s;\n  cursor: pointer;\n  &:hover {\n    background-color: white;\n    color: teal;\n    border: 1px solid teal;\n  }\n`;\n\nPriceDetails.propTypes = {\n  checkoutButtonHandler: PropTypes.func.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n  buttonVisible: PropTypes.bool,\n};\n\nPriceDetails.defaultProps = {\n  buttonVisible: true,\n};\n\nexport default PriceDetails;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Circle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }));\n});\nCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCircle.displayName = 'Circle';\nexport default Circle;","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Circle } from 'react-feather';\n\nconst CustomRadioButton = ({\n  id,\n  name,\n  value,\n  selected,\n  radioBtnChangeHandler,\n}) => {\n  return (\n    <div>\n      <RadioButton\n        id={id}\n        name={name}\n        checked={selected}\n        onChange={(e) => radioBtnChangeHandler(id, name, value, e)}\n      />\n      <Label htmlFor={id}>\n        <RadioButtonIcon />\n      </Label>\n    </div>\n  );\n};\n\nconst Label = styled.label`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 2px solid #424553;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  &:hover {\n    font-weight: 500;\n    color: teal;\n  }\n`;\n\nconst RadioButtonIcon = styled(Circle)`\n  width: 12px;\n  height: 12px;\n  fill: white;\n  stroke: none;\n`;\n\nconst RadioButton = styled.input.attrs(() => ({\n  type: 'radio',\n}))`\n  display: none;\n  &:checked + label {\n    border: 2px solid teal;\n  }\n  &:checked + label ${RadioButtonIcon} {\n    fill: teal;\n  }\n`;\n\nCustomRadioButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  radioBtnChangeHandler: PropTypes.func,\n};\n\nCustomRadioButton.defaultProps = {\n  selected: false,\n  radioBtnChangeHandler: () => {},\n};\n\nexport default CustomRadioButton;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Plus } from 'react-feather';\n\nimport PriceDetails from '../components/PriceDetails';\nimport CustomRadioButton from '../components/shared/CustomRadioButton';\nimport Spinner from '../components/shared/SpinnerRect';\nimport Modal from '../components/Modal';\nimport AddressForm from '../components/AddressForm';\n\nimport usePageTitle from '../hooks/usePageTitle';\n\nimport { getUserAddresses, setSelectedAddress } from '../store/addressSlice';\nimport { STATUS } from '../utils';\nimport device from '../utils/device';\n\nconst Address = () => {\n  usePageTitle('Address | Fashionista');\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const { addresses, status, defaultAddress, otherAddresses, selectedAddress } =\n    useSelector((state) => state.address);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getUserAddresses());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (addresses.length > 0) {\n      dispatch(setSelectedAddress({ address: defaultAddress }));\n    }\n  }, [addresses, defaultAddress, dispatch]);\n\n  const changeSelectedAddress = (addressId) => {\n    dispatch(\n      setSelectedAddress({\n        address: addresses.find((address) => address.id === addressId),\n      })\n    );\n  };\n\n  const checkoutHandler = () => {\n    navigate('/checkout/payment', {\n      replace: true,\n    });\n  };\n\n  if (status === STATUS.LOADING) return <Spinner />;\n\n  return (\n    <Container>\n      <Modal\n        onModalClose={() => setShowAddressModal(false)}\n        showModal={showAddressModal}\n      >\n        {showAddressModal && (\n          <AddressForm afterSubmitHandler={() => setShowAddressModal(false)} />\n        )}\n      </Modal>\n      <AddressListContainer>\n        <AddressListTitleContainer>\n          <AddressListTitle>Select Delivery Address</AddressListTitle>\n          <AddNewAddressButton onClick={() => setShowAddressModal(true)}>\n            Add New Address\n          </AddNewAddressButton>\n        </AddressListTitleContainer>\n        {addresses.length > 0 && (\n          <>\n            <AddressTitle>Default Address</AddressTitle>\n            <AddressBlock\n              onClick={() => changeSelectedAddress(defaultAddress.id)}\n              selected={selectedAddress?.id === defaultAddress.id}\n            >\n              <FlexContainer>\n                <CustomRadioButton\n                  name=\"address\"\n                  selected={selectedAddress?.id === defaultAddress.id}\n                  id={defaultAddress.id}\n                  value={defaultAddress.id}\n                />\n                <div>\n                  <AddressFieldName>{defaultAddress.name}</AddressFieldName>\n                  <AddressField>\n                    {defaultAddress.address}, {defaultAddress.locality}\n                  </AddressField>\n                  <AddressField>\n                    {defaultAddress.city}, {defaultAddress.state} -{' '}\n                    {defaultAddress.pincode}\n                  </AddressField>\n                  <AddressFieldNumber>\n                    Mobile: <span>{defaultAddress.phoneNumber}</span>\n                  </AddressFieldNumber>\n                </div>\n              </FlexContainer>\n            </AddressBlock>\n            <AddressTitle>Other Addresses</AddressTitle>\n            {otherAddresses.map((address) => (\n              <AddressBlock\n                key={address.id}\n                onClick={() => changeSelectedAddress(address.id)}\n                selected={selectedAddress?.id === address.id}\n              >\n                <FlexContainer>\n                  <CustomRadioButton\n                    name=\"address\"\n                    selected={selectedAddress?.id === address.id}\n                    id={address.id}\n                    value={address.id}\n                  />\n                  <div>\n                    <AddressFieldName>{address.name}</AddressFieldName>\n                    <AddressField>\n                      {address.address}, {address.locality}\n                    </AddressField>\n                    <AddressField>\n                      {address.city}, {address.state} - {address.pincode}\n                    </AddressField>\n                    <AddressFieldNumber>\n                      Mobile: <span>{address.phoneNumber}</span>\n                    </AddressFieldNumber>\n                  </div>\n                </FlexContainer>\n              </AddressBlock>\n            ))}\n          </>\n        )}\n        <AddressBlock onClick={() => setShowAddressModal(true)}>\n          <AddNewAddressButton onClick={() => setShowAddressModal(true)}>\n            <Plus />\n            <span>Add New Address</span>\n          </AddNewAddressButton>\n        </AddressBlock>\n      </AddressListContainer>\n      <PriceDetailsContainer>\n        <PriceDetails\n          checkoutButtonHandler={checkoutHandler}\n          buttonTitle=\"Continue\"\n          buttonVisible={!!selectedAddress.id}\n        />\n      </PriceDetailsContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 50px 20px;\n  display: flex;\n  gap: 20px;\n  background: #f1f3f6;\n  align-items: flex-start;\n  min-height: 100vh;\n  @media ${device.tablet} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  @media ${device.mobileM} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst AddressListContainer = styled.div`\n  flex: 3;\n  background: #fff;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 2px 0px;\n`;\n\nconst AddressListTitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 24px;\n  border-bottom: 1px solid #efefef;\n`;\n\nconst AddressListTitle = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst AddressTitle = styled.p`\n  padding: 13px 24px;\n  font-size: 13px;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: #535766;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst AddressBlock = styled.div`\n  padding: 13px 24px;\n  margin: 13px 24px;\n  border: 1px solid #eaeaec;\n  border-radius: 4px;\n  box-shadow: ${(props) =>\n    props.selected ? '0 0 4px rgb(40 44 63 / 20%)' : ''};\n  cursor: pointer;\n  &:hover {\n    border: 1px solid #d4d5d9;\n    box-shadow: 0 0 4px rgb(40 44 63 / 8%);\n  }\n`;\n\nconst AddressField = styled.div`\n  color: #2e2e2e;\n`;\n\nconst AddressFieldName = styled.div`\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst AddressFieldNumber = styled.div`\n  margin-top: 20px;\n  color: #2e2e2e;\n  & span {\n    font-weight: 500;\n  }\n`;\n\nconst AddNewAddressButton = styled.button`\n  background: white;\n  border: 1px solid teal;\n  padding: 10px 15px;\n  font-size: 14px;\n  color: teal;\n  font-weight: 500;\n  text-transform: uppercase;\n  border-radius: 5px;\n  cursor: pointer;\n\n  ${AddressBlock} & {\n    border: none;\n    padding: 0;\n    border-radius: 0;\n    text-transform: capitalize;\n    display: flex;\n    align-items: flex-start;\n    padding: 10px 0;\n  }\n\n  & svg {\n    width: 16px;\n    height: 16px;\n    margin-right: 5px;\n  }\n`;\n\nconst PriceDetailsContainer = styled.div`\n  flex: 1;\n  position: sticky;\n  top: 80px;\n`;\n\nexport default Address;\n"],"names":["PriceDetails","checkoutButtonHandler","buttonTitle","buttonVisible","cart","useSelector","state","PriceBlockContainer","PriceBlockHeader","PriceBreakUpContainer","PriceDetail","PriceDetailItem","items","length","PriceDetailValue","totalPrice","deliveryPrice","TotalAmount","CheckoutButton","onClick","styled","defaultProps","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Circle","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","propTypes","PropTypes","displayName","CustomRadioButton","id","name","value","selected","radioBtnChangeHandler","RadioButton","checked","onChange","e","Label","htmlFor","RadioButtonIcon","type","Container","device","AddressListContainer","AddressListTitleContainer","AddressListTitle","AddressTitle","FlexContainer","AddressBlock","props","AddressField","AddressFieldName","AddressFieldNumber","AddNewAddressButton","PriceDetailsContainer","usePageTitle","useState","showAddressModal","setShowAddressModal","address","addresses","status","defaultAddress","otherAddresses","selectedAddress","dispatch","useDispatch","navigate","useNavigate","useEffect","getUserAddresses","setSelectedAddress","changeSelectedAddress","addressId","find","STATUS","onModalClose","showModal","afterSubmitHandler","locality","city","pincode","phoneNumber","map","replace"],"sourceRoot":""}